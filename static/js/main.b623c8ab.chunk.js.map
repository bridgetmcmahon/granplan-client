{"version":3,"sources":["serviceWorker.js","Firebase.js","components/layout/Nav.js","components/Home.js","components/auth/Login.js","components/auth/Register.js","components/appointments/Appointment.js","components/appointments/Appointments.js","components/appointments/AppointmentForm.js","components/chatroom/Messages.js","components/chatroom/MessageForm.js","components/chatroom/Chatroom.js","components/pages/NotFound.js","components/layout/Footer.js","components/App.js","index.js"],"names":["Boolean","window","location","hostname","match","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Nav","react_default","a","createElement","className","this","props","userLoggedIn","Link","to","onClick","logout","Component","Home","Login","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","isFormValid","_ref","email","password","_handleChange","e","setState","defineProperty","target","name","value","_handleSubmit","preventDefault","state","errors","loading","auth","signInWithEmailAndPassword","then","signedInUser","console","log","catch","err","error","concat","history","push","_this$state","onSubmit","placeholder","onChange","type","disabled","length","Register","isFormEmpty","isPasswordValid","username","passwordConfirmation","_ref2","createUserWithEmailAndPassword","createdUser","user","updateProfile","displayName","saveUser","usersRef","child","uid","set","database","ref","Appointment","_handleShowClick","showAppointmentInfo","_handleDeleteClick","deleteAppointment","nominateFamilyMember","_this$props$appointme","appointment","purpose","patient","date","notes","onAuthStateChanged","appointmentData","family_member","updates","appointmentKey","update","_this$props$appointme2","style","cursor","color","marginLeft","lib_default","symbol","label","Appointments","fetchAppointments","on","snapshot","appointments","val","id","remove","_this2","keys","map","key","appointments_Appointment","bind","AppointmentForm","appointmentsRef","message","_handleInput","params","editAppointment","addNewAppointment","fetchAppointment","once","htmlFor","required","Messages","messages","sender","MessageForm","sendMessage","Chatroom","fetchMessages","text","checkForUser","chatroom_Messages","chatroom_MessageForm","NotFound","layout_Nav","Footer","App","signOut","HashRouter","Switch","Route","exact","path","component","layout_Footer","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b623c8ab.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/storage';\n\nconst config = {\n  apiKey: \"AIzaSyBwe7XZHJjqOp2F779REb4wFZ-Xwc5RpzM\",\n  authDomain: \"granplan-database.firebaseapp.com\",\n  databaseURL: \"https://granplan-database.firebaseio.com\",\n  projectId: \"granplan-database\",\n  storageBucket: \"granplan-database.appspot.com\",\n  messagingSenderId: \"809306430652\",\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport '../../App.css';\n\nclass Nav extends Component {\n  render() {\n    return (\n        <nav className=\"header\">\n          <div className=\"nav-bar\">\n          { this.props.userLoggedIn ? (\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/appointments\">Appointments</Link>\n              </li>\n              <li>\n                <Link to=\"/chatroom\">Chat</Link>\n              </li>\n              <li>\n                <button className=\"logout\" onClick={ this.props.logout }>Log Out</button>\n              </li>\n            </ul>\n          ) : (\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/login\">Login</Link>\n              </li>\n              <li>\n                <Link to=\"/register\">Register</Link>\n              </li>\n            </ul>\n          ) }\n          </div>\n        </nav>\n    );\n  }\n}\n\nexport default Nav;\n","import React, { Component } from 'react';\n\nclass Home extends Component {\n  render() {\n    return (\n        <div className=\"container\">\n          <h1>Welcome to Granplan</h1>\n          <p>The app that helps family with rostering elderly and parental care.</p>\n        </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport firebase from '../../Firebase';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      errors: [],\n      loading: false,\n    };\n  }\n\n  isFormValid = ({ email, password }) => email && password;\n\n  _handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  _handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (this.isFormValid(this.state)) {\n      this.setState({\n        errors: '',\n        loading: true,\n      });\n\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(this.state.email, this.state.password)\n        .then( (signedInUser) => {\n          console.log(signedInUser);\n        }).catch( (err) => {\n          console.error(err);\n          this.setState({\n            errors: this.state.errors.concat(err),\n            loading: false,\n          })\n        })\n      this.props.history.push('/appointments');\n    }\n  }\n\n  render() {\n    const { email, password, errors, loading } = this.state;\n\n    return (\n      <div className=\"small-container\">\n        <h2>Login:</h2>\n          <form onSubmit={ this._handleSubmit } className=\"form\">\n            <input\n              name=\"email\"\n              placeholder=\"Email\"\n              onChange={ this._handleChange }\n              value={ email }\n              type=\"email\"\n            />\n\n            <input\n              name=\"password\"\n              placeholder=\"Password\"\n              onChange={ this._handleChange }\n              value={ password }\n              type=\"password\"\n            />\n\n            <button\n              disabled={ loading }\n              className={ loading ? 'loading submit' : 'submit' }\n            >\n              Submit\n            </button>\n          </form>\n\n          { errors.length > 0 && (\n            <p className=\"error\">\n              <h3>Error</h3>\n              <p>{ errors }</p>\n            </p>\n          ) }\n\n          <p>Don't have an account? <Link to=\"/register\">Register here</Link></p>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport firebase from '../../Firebase';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      passwordConfirmation: '',\n      errors: [],\n      loading: false,\n      usersRef: firebase.database().ref('users'),\n    };\n  }\n\n  isFormValid = () => {\n    if (this.isFormEmpty(this.state)) {\n      this.setState({\n        errors: 'Fill in all fields'\n      });\n      return false;\n    } else if (!this.isPasswordValid(this.state)) {\n      this.setState({\n        errors: 'Password is not valid'\n      });\n      return false;\n    } else {\n      return true; // form is valid\n    }\n  }\n\n  isFormEmpty = ({ username, email, password, passwordConfirmation }) => {\n    return (!username.length || !email.length || !password.length || !passwordConfirmation.length);\n  }\n\n  isPasswordValid = ({ password, passwordConfirmation }) => {\n    if (password.length < 6 || passwordConfirmation.length < 6) {\n      return false;\n    } else if (password !== passwordConfirmation) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  _handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  _handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (this.isFormValid()) {\n      this.setState({\n        errors: '',\n        loading: true,\n      });\n\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(this.state.email, this.state.password)\n        .then((createdUser) => {\n          console.log(createdUser);\n          createdUser.user.updateProfile({\n            displayName: this.state.username,\n          })\n          .then(() => {\n            this.saveUser(createdUser).then(() => {\n              console.log('user saved');\n            })\n          })\n          .catch((err) => {\n            console.log(err);\n            this.setState({\n              errors: this.state.errors.concat(err),\n              loading: false,\n            })\n          })\n        }).catch((err) => {\n          console.error(err);\n          this.setState({\n            errors: err,\n            loading: false,\n          });\n        })\n    }\n  }\n\n  saveUser = (createdUser) => {\n    return this.state.usersRef.child(createdUser.user.uid).set({\n      name: createdUser.user.displayName\n    })\n  }\n\n  render() {\n    const { username, email, password, passwordConfirmation, errors, loading } = this.state;\n\n    return (\n      <div className=\"small-container\">\n      <h2>Register:</h2>\n            <form onSubmit={ this._handleSubmit } className=\"form\">\n                <input\n                  name=\"username\"\n                  placeholder=\"Username\"\n                  onChange={ this._handleChange }\n                  value={ username }\n                  type=\"text\"\n                />\n\n                <input\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  onChange={ this._handleChange }\n                  value={ email }\n                  type=\"email\"\n                />\n\n                <input\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  onChange={ this._handleChange }\n                  value={ password }\n                  type=\"password\"\n                />\n\n                <input\n                  name=\"passwordConfirmation\"\n                  placeholder=\"Password Confirmation\"\n                  onChange={ this._handleChange }\n                  value={ passwordConfirmation }\n                  type=\"password\"\n                />\n\n                <button\n                  disabled={ loading }\n                  className={ loading ? 'loading' : '' }\n                >\n                  Submit\n                </button>\n            </form>\n\n            { errors.length > 0 && (\n              <p className=\"error\">\n                <h3>Error</h3>\n                <p>{ errors }</p>\n              </p>\n            ) }\n\n            <p>Already a User? <Link to=\"/login\">Login here</Link></p>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport firebase from '../../Firebase';\n\nimport Emoji from 'a11y-react-emoji';\n\nclass Appointment extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showAppointmentInfo: false,\n    };\n  }\n\n  _handleShowClick = () => {\n    this.setState({\n      showAppointmentInfo: !this.state.showAppointmentInfo,\n    })\n  }\n\n  _handleDeleteClick = () => {\n    this.props.deleteAppointment();\n  }\n\n  nominateFamilyMember = () => {\n    const { purpose, patient, date, location, notes } = this.props.appointment;\n\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        const appointmentData = {\n          family_member: user.displayName,\n          purpose: purpose,\n          patient: patient,\n          date: date,\n          location: location,\n          notes: notes,\n        }\n\n        let updates = {}\n        updates['/' + this.props.appointmentKey] = appointmentData;\n\n        firebase.database().ref('appointments').update(updates);\n      }\n    })\n  }\n\n  render() {\n    const { purpose, patient, date, location, notes, family_member } = this.props.appointment;\n    const { showAppointmentInfo } = this.state;\n\n    return (\n      <div className=\"appointment-card\">\n        <div className=\"appointment-header\">\n          <span>\n            <i onClick={ this._handleShowClick } className=\"fas fa-sort-down\" />\n            <h3>{ purpose }</h3>\n            <p>{ date }</p>\n          </span>\n\n          <i\n            className=\"fas fa-times\"\n            onClick={ this._handleDeleteClick }\n            style={{ cursor: 'pointer', color: '#F08080', marginLeft: '20px' }}/>\n        </div>\n\n        { showAppointmentInfo ? (\n          <div className=\"appointment-info\">\n            <p><strong>For</strong>: { patient }</p>\n            <p><strong>Location</strong>: { location }</p>\n            <p><strong>Notes</strong>: { notes }</p>\n            <p><strong>Family Member</strong>: { family_member }</p>\n\n            <span className=\"controls\">\n              { family_member !== \"\" ? (\n                <button\n                  disabled\n                  className=\"nominate-button disabled\"\n                >\n                  <Emoji symbol=\"✋🏻\" label=\"hand\" />I'll take { patient } to this one!\n                </button>\n              ) : (\n                <button\n                  className=\"nominate-button\"\n                  onClick={ this.nominateFamilyMember }\n                >\n                  <Emoji symbol=\"✋🏻\" label=\"hand\" />I'll take { patient } to this one!\n                </button>\n              ) }\n\n              <Link className=\"edit-link\" to={\"/appointments/\" + this.props.appointmentKey}>\n                <i className=\"fas fa-pen\" />\n              </Link>\n            </span>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Appointment;\n","import React, { Component } from 'react';\nimport Appointment from './Appointment';\nimport firebase from '../../Firebase';\n\nimport { Link } from 'react-router-dom';\n\nclass Appointments extends Component {\n  constructor() {\n    super();\n    this.state = {\n      appointments: [],\n    };\n\n    firebase.auth().onAuthStateChanged((user) => {\n      if (!user) {\n        this.props.history.push('/login');\n      }\n    })\n  };\n\n  componentDidMount() {\n    this.fetchAppointments();\n  }\n\n  fetchAppointments = () => {\n    const appointmentsData = firebase.database().ref().child('appointments');\n    appointmentsData.on('value', (snapshot) => {\n      this.setState({\n        appointments: snapshot.val(),\n      });\n    });\n  }\n\n  deleteAppointment = (id) => {\n    firebase.database().ref('appointments').child(id).remove();\n    this.fetchAppointments();\n  };\n\n  nominateFamilyMember = (id, user) => {\n    const appointmentData = {\n      family_member: user,\n    }\n\n    let updates = {}\n    updates['/' + id] = appointmentData;\n\n    firebase.database().ref('appointments').update(updates);\n  }\n\n  render() {\n    const { appointments } = this.state;\n\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"new-appointment\">\n            <Link to=\"/appointments/new\">\n              <i className=\"fas fa-plus\"></i>\n              <h3>New Appointment</h3>\n            </Link>\n          </div>\n          <h1>All Appointments</h1>\n          { Object.keys(appointments).map((key) => (\n            <Appointment\n              key={ key }\n              appointmentKey={ key }\n              appointment={ appointments[key] }\n              deleteAppointment={ this.deleteAppointment.bind(this, key) }\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Appointments;\n","import React, { Component } from 'react';\nimport firebase from '../../Firebase';\n\nclass AppointmentForm extends Component {\n  state = {\n    purpose: '',\n    patient: '',\n    date: '',\n    location: '',\n    notes: '',\n    family_member: '',\n    errors: [],\n    appointmentsRef: firebase.database().ref('appointments'),\n  };\n\n  isFormValid = () => {\n    let errors = [];\n    let error;\n\n    if (this.isFormEmpty(this.state)) {\n      error = { message: 'Fill in the required fields' };\n      this.setState({\n        errors: errors.concat(error),\n      });\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  isFormEmpty = ({ purpose, patient, date, location }) => {\n    return (!purpose.length || !patient.length || !date.length || !location.length);\n  }\n\n  _handleInput = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  _handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (this.isFormValid()) {\n      this.setState({\n        errors: [],\n      });\n\n      const appointmentData = {\n        purpose: this.state.purpose,\n        patient: this.state.patient,\n        date: this.state.date,\n        location: this.state.location,\n        notes: this.state.notes,\n        family_member: this.state.family_member\n      };\n\n      if (this.props.match.params.id) {\n        this.editAppointment(appointmentData);\n      } else {\n        this.addNewAppointment(appointmentData);\n      }\n\n      this.props.history.push('/appointments');\n    }\n  }\n\n  addNewAppointment(appointmentData) {\n    const newAppointmentKey = this.state.appointmentsRef.push().key;\n\n    let updates = {};\n    updates['/' + newAppointmentKey] = appointmentData;\n\n    this.state.appointmentsRef.update(updates);\n  }\n\n  editAppointment(appointmentData) {\n    const appointmentKey = this.props.match.params.id;\n    let updates = {}\n    updates['/' + appointmentKey] = appointmentData;\n\n    this.state.appointmentsRef.update(updates);\n  }\n\n  fetchAppointment = (id) => {\n    const appointmentData = firebase.database().ref().child('appointments').child(id);\n    appointmentData.once('value', (snapshot) => {\n      this.setState({\n        date: snapshot.val().date,\n        family_member: snapshot.val().family_member,\n        location: snapshot.val().location,\n        notes: snapshot.val().notes,\n        patient: snapshot.val().patient,\n        purpose: snapshot.val().purpose,\n      });\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.match.params.id) {\n      this.fetchAppointment(this.props.match.params.id);\n    };\n  }\n\n  render() {\n    const { purpose, patient, date, location, notes, family_member } = this.state;\n\n    return (\n      <div>\n        <div className=\"container form\">\n          { this.props.match.params.id ? (\n            <h2>Edit Appointment:</h2>\n          ) : (\n            <h2>New Appointment:</h2>\n          ) }\n          <form onSubmit={ this._handleSubmit }>\n            <div className=\"label-input\">\n              <label htmlFor=\"patient\">For</label>\n              <input\n                type=\"text\"\n                name=\"patient\"\n                value={ patient }\n                placeholder=\"Aileen\"\n                required\n                onChange={this._handleInput}\n              />\n            </div>\n            <div className=\"label-input\">\n              <label htmlFor=\"name\">Purpose</label>\n              <input\n                type=\"text\"\n                name=\"purpose\"\n                value={ purpose }\n                placeholder=\"Doctor's Appointment\"\n                required\n                onChange={ this._handleInput }\n              />\n            </div>\n            <div className=\"label-input\">\n              <label htmlFor=\"date\">Date</label>\n              <input\n                type=\"date\"\n                name=\"date\"\n                value={ date }\n                onChange={ this._handleInput }\n                required\n              />\n            </div>\n            <div className=\"label-input\">\n              <label htmlFor=\"location\">Location</label>\n              <input\n                type=\"text\"\n                name=\"location\"\n                value={ location }\n                placeholder=\"Brisbane\"\n                onChange={ this._handleInput }\n                required\n              />\n            </div>\n            <div className=\"label-input\">\n              <label htmlFor=\"notes\">Notes</label>\n              <textarea\n                name=\"notes\"\n                value={ notes }\n                placeholder=\"Bring scans\"\n                onChange={ this._handleInput }\n              />\n            </div>\n            <div className=\"label-input\">\n              <label htmlFor=\"family_member\">Family Member</label>\n              <input\n                type=\"text\"\n                name=\"family_member\"\n                value={ family_member }\n                placeholder=\"Anne\"\n                onChange={ this._handleInput }\n              />\n            </div>\n            <input type=\"submit\" value={ this.props.match.params.id ? \"Edit Appointment\" : \"Add Appointment\" } />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AppointmentForm;\n","import React, { Component } from 'react';\n\nclass Messages extends Component {\n  render() {\n    const messages = this.props.messages;\n\n    return (\n      <div className=\"messages\">\n        { Object.keys(messages).map((key) => <p key={ key }>{ messages[key].sender }: { messages[key].message }</p>) }\n      </div>\n    );\n  }\n}\n\nexport default Messages;\n","import React, { Component } from 'react';\n\nclass MessageForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      message: '',\n    }\n  }\n\n  _handleInput = (e) => {\n    this.setState({\n      message: e.target.value\n    });\n  }\n\n  _handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.sendMessage(this.state.message);\n\n    this.setState({\n      message: '',\n    });\n  }\n\n  render() {\n    return (\n      <form onSubmit={ this._handleSubmit } className=\"form\">\n        <input\n          type=\"text\"\n          onChange={ this._handleInput }\n          placeholder=\"Send a message...\"\n          value={ this.state.message }\n        />\n        <input type=\"submit\" value=\"Send\" />\n      </form>\n    );\n  }\n}\n\nexport default MessageForm;\n","import React, { Component } from 'react';\nimport Messages from './Messages';\nimport MessageForm from './MessageForm';\nimport firebase from '../../Firebase';\n\nclass Chatroom extends Component {\n  constructor() {\n    super();\n    this.state = {\n      messages: [],\n      user: null,\n    }\n  }\n\n  checkForUser() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user: user.displayName })\n      } else {\n        this.setState({ user: null })\n        this.props.history.push('/login');\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.fetchMessages();\n    this.checkForUser();\n  }\n\n  fetchMessages = () => {\n    const messagesData = firebase.database().ref().child('messages');\n    messagesData.on('value', (snapshot) => {\n      this.setState({\n        messages: snapshot.val(),\n      });\n    });\n  }\n\n  sendMessage = (text) => {\n    const messagesData = firebase.database().ref().child('messages');\n    messagesData.push({\n      message: text,\n      sender: this.state.user\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Chatroom</h1>\n        <div className=\"chatroom\">\n          <Messages messages={ this.state.messages } />\n          <MessageForm sendMessage={ this.sendMessage }/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Chatroom;\n","import React from 'react';\nimport Nav from '../layout/Nav';\n\nexport default () => {\n  return (\n    <div>\n      <Nav />\n      <div className=\"container\">\n        <h1>404 Page Not Found</h1>\n        <p>Sorry! That pages does not exist</p>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer>\n        <p>Created by Bridget McMahon 2019</p>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport firebase from '../Firebase';\n\nimport Nav from './layout/Nav';\nimport Home from './Home';\nimport Login from './auth/Login';\nimport Register from './auth/Register';\nimport Appointments from './appointments/Appointments';\nimport AppointmentForm from './appointments/AppointmentForm';\nimport Chatroom from './chatroom/Chatroom';\nimport NotFound from './pages/NotFound';\nimport Footer from './layout/Footer';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userLoggedIn: false,\n    }\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({\n          userLoggedIn: true,\n        });\n\n        // this.props.history.push('/')\n      }\n    });\n  }\n\n  logout = () => {\n    firebase.auth().signOut().then((user) => {\n      this.setState({ userLoggedIn: false })\n    })\n\n    this.props.history.push('/');\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Nav userLoggedIn={ this.state.userLoggedIn } logout={ this.logout } />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={ Home } />\n              <Route exact path=\"/login\" component={ Login } />\n              <Route exact path=\"/register\" component={ Register } />\n              <Route exact path=\"/appointments\" component={ Appointments } />\n              <Route exact path=\"/appointments/new\" component={ AppointmentForm } />\n              <Route path=\"/appointments/:id\" component={ AppointmentForm } />\n              <Route exact path=\"/chatroom\" component={ Chatroom } />\n              <Route component={ NotFound } />\n            </Switch>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}