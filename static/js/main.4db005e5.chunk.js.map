{"version":3,"sources":["serviceWorker.js","Firebase.js","components/layout/Nav.js","components/Home.js","components/auth/Login.js","components/auth/Register.js","components/appointments/Appointment.js","components/appointments/Appointments.js","components/appointments/AppointmentForm.js","components/chatroom/Messages.js","components/chatroom/MessageForm.js","components/chatroom/Chatroom.js","components/pages/NotFound.js","components/layout/Footer.js","components/App.js","index.js"],"names":["Boolean","window","location","hostname","match","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Nav","react_default","a","createElement","className","this","props","userLoggedIn","Link","to","onClick","logout","Component","Home","Login","state","email","password","errors","loading","isFormValid","_ref","_this","setState","_handleChange","e","Object","defineProperty","target","name","value","_handleSubmit","preventDefault","auth","signInWithEmailAndPassword","then","signedInUser","console","log","history","push","catch","err","message","_this$state","onSubmit","placeholder","onChange","type","disabled","length","Register","username","passwordConfirmation","usersRef","database","ref","isFormEmpty","isPasswordValid","_ref2","createUserWithEmailAndPassword","createdUser","user","updateProfile","displayName","saveUser","concat","error","child","uid","set","Appointment","showAppointmentInfo","_handleShowClick","_handleDeleteClick","confirmAlert","title","buttons","label","deleteAppointment","nominateFamilyMember","_this$props$appointme","appointment","purpose","patient","date","notes","onAuthStateChanged","appointmentData","familyMember","updates","appointmentKey","update","_this$props$appointme2","time","style","cursor","color","marginLeft","a11y_react_emoji_lib_default","symbol","Appointments","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_handleInput","fetchAppointments","searchTerm","orderByChild","equalTo","on","snapshot","snap","val","appointmentsArray","keys","map","key","sort","b","Date","appointmentsObject","forEach","appointments","id","remove","filterAppointments","_this2","appointments_Appointment","bind","AppointmentForm","appointmentsRef","currentUser","editMode","editAppointment","addNewAppointment","fetchAppointment","once","newAppointmentKey","params","fetchCurrentUser","htmlFor","required","display","Messages","_this3","messages","sender","MessageForm","sendMessage","Chatroom","fetchMessages","limitToLast","text","checkForUser","chatroom_Messages","chatroom_MessageForm","NotFound","layout_Nav","Footer","App","signOut","HashRouter","Switch","Route","exact","path","component","layout_Footer","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4db005e5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/storage';\n\nconst config = {\n  apiKey: \"AIzaSyBwe7XZHJjqOp2F779REb4wFZ-Xwc5RpzM\",\n  authDomain: \"granplan-database.firebaseapp.com\",\n  databaseURL: \"https://granplan-database.firebaseio.com\",\n  projectId: \"granplan-database\",\n  storageBucket: \"granplan-database.appspot.com\",\n  messagingSenderId: \"809306430652\",\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport '../../App.css';\n\nclass Nav extends Component {\n  render() {\n    return (\n        <nav className=\"header\">\n          <div className=\"nav-bar\">\n\n          { this.props.userLoggedIn ? (\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/appointments\">Appointments</Link>\n              </li>\n              <li>\n                <Link to=\"/chatroom\">Chat</Link>\n              </li>\n              <li>\n                <button className=\"logout\" onClick={ this.props.logout }>Log Out</button>\n              </li>\n            </ul>\n          ) : (\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/login\">Login</Link>\n              </li>\n              <li>\n                <Link to=\"/register\">Register</Link>\n              </li>\n            </ul>\n          ) }\n          </div>\n        </nav>\n    );\n  }\n}\n\nexport default Nav;\n","import React, { Component } from 'react';\n\nclass Home extends Component {\n  render() {\n    return (\n        <div className=\"container\">\n          <h1>Welcome to Granplan</h1>\n          <p>The app that helps family with rostering elderly and parental care.</p>\n        </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport firebase from '../../Firebase';\n\nclass Login extends Component {\n  state = {\n    email: '',\n    password: '',\n    errors: [],\n    loading: false,\n  }\n\n  isFormValid = ({ email, password }) => {\n    if (email && password) {\n      return true;\n    } else {\n      this.setState({\n        errors: 'Please fill in both fields',\n      });\n    }\n  }\n\n  _handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  _handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (this.isFormValid(this.state)) {\n      this.setState({\n        errors: '',\n        loading: true,\n      });\n\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(this.state.email, this.state.password)\n        .then( (signedInUser) => {\n          console.log(signedInUser);\n          this.props.history.push('/appointments');\n\n        }).catch( (err) => {\n          console.log(err.message);\n          this.setState({\n            email: '',\n            password: '',\n            errors: '' + err.message,\n            loading: false,\n          });\n        })\n    }\n  }\n\n  render() {\n    const { email, password, errors, loading } = this.state;\n    console.log('render');\n\n    return (\n      <div className=\"small-container\">\n        <h2>Login:</h2>\n          <form onSubmit={ this._handleSubmit } className=\"form\">\n            <input\n              name=\"email\"\n              placeholder=\"Email\"\n              onChange={ this._handleChange }\n              value={ email }\n              type=\"email\"\n            />\n\n            <input\n              name=\"password\"\n              placeholder=\"Password\"\n              onChange={ this._handleChange }\n              value={ password }\n              type=\"password\"\n            />\n\n            <button\n              disabled={ loading }\n              className={ loading ? 'loading submit' : 'submit' }\n            >\n              Submit\n            </button>\n          </form>\n\n          { errors.length > 0 && (\n            <div className=\"error\">\n              <h3>Error</h3>\n              <p>{ errors }</p>\n            </div>\n          ) }\n\n          <p>Don't have an account? <Link to=\"/register\">Register here</Link></p>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport firebase from '../../Firebase';\n\nclass Register extends Component {\n  state = {\n    username: '',\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n    errors: [],\n    loading: false,\n    usersRef: firebase.database().ref('users'),\n  }\n\n  isFormValid = () => {\n    if (this.isFormEmpty(this.state)) {\n      this.setState({\n        errors: 'Fill in all fields'\n      });\n      return false;\n    } else if (!this.isPasswordValid(this.state)) {\n      this.setState({\n        errors: 'Password is not valid'\n      });\n      return false;\n    } else {\n      return true; // form is valid\n    }\n  }\n\n  isFormEmpty = ({ username, email, password, passwordConfirmation }) => {\n    return (!username.length || !email.length || !password.length || !passwordConfirmation.length);\n  }\n\n  isPasswordValid = ({ password, passwordConfirmation }) => {\n    if (password.length < 6 || passwordConfirmation.length < 6) {\n      return false;\n    } else if (password !== passwordConfirmation) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  _handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  _handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (this.isFormValid()) {\n      this.setState({\n        errors: '',\n        loading: true,\n      });\n\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(this.state.email, this.state.password)\n        .then((createdUser) => {\n          console.log(createdUser);\n          createdUser.user.updateProfile({\n            displayName: this.state.username,\n          })\n          .then(() => {\n            this.saveUser(createdUser).then(() => {\n              console.log('user saved');\n            })\n          })\n          .catch((err) => {\n            console.log(err);\n            this.setState({\n              errors: this.state.errors.concat(err),\n              loading: false,\n            })\n          })\n        }).catch((err) => {\n          console.error(err);\n          this.setState({\n            errors: err,\n            loading: false,\n          });\n        })\n    }\n  }\n\n  saveUser = (createdUser) => {\n    return this.state.usersRef.child(createdUser.user.uid).set({\n      name: createdUser.user.displayName\n    })\n  }\n\n  render() {\n    const { username, email, password, passwordConfirmation, errors, loading } = this.state;\n\n    return (\n      <div className=\"small-container\">\n      <h2>Register:</h2>\n            <form onSubmit={ this._handleSubmit } className=\"form\">\n                <input\n                  name=\"username\"\n                  placeholder=\"Username\"\n                  onChange={ this._handleChange }\n                  value={ username }\n                  type=\"text\"\n                />\n\n                <input\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  onChange={ this._handleChange }\n                  value={ email }\n                  type=\"email\"\n                />\n\n                <input\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  onChange={ this._handleChange }\n                  value={ password }\n                  type=\"password\"\n                />\n\n                <input\n                  name=\"passwordConfirmation\"\n                  placeholder=\"Password Confirmation\"\n                  onChange={ this._handleChange }\n                  value={ passwordConfirmation }\n                  type=\"password\"\n                />\n\n                <button\n                  disabled={ loading }\n                  className={ loading ? 'loading' : '' }\n                >\n                  Submit\n                </button>\n            </form>\n\n            { errors.length > 0 && (\n              <div className=\"error\">\n                <h3>Error</h3>\n                <p>{ errors }</p>\n              </div>\n            ) }\n\n            <p>Already a User? <Link to=\"/login\">Login here</Link></p>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport firebase from '../../Firebase';\n\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport Emoji from 'a11y-react-emoji';\n\nclass Appointment extends Component {\n  state = {\n    showAppointmentInfo: false,\n  }\n\n  _handleShowClick = () => {\n    this.setState({\n      showAppointmentInfo: !this.state.showAppointmentInfo,\n    })\n  }\n\n  _handleDeleteClick = () => {\n    confirmAlert({\n      title: 'Wait!',\n      message: \"Are you sure you want to delete this appointment? This action can't be undone.\",\n      buttons: [\n        {\n          label: 'Yes',\n          onClick: this.props.deleteAppointment\n        },\n        {\n          label: 'No',\n          onClick: () => console.log('clicked no')\n        }\n      ]\n    });\n  }\n\n  nominateFamilyMember = () => {\n    const { purpose, patient, date, location, notes } = this.props.appointment;\n\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        const appointmentData = {\n          familyMember: user.displayName,\n          purpose: purpose,\n          patient: patient,\n          date: date,\n          location: location,\n          notes: notes,\n        }\n\n        let updates = {}\n        updates[`/${this.props.appointmentKey}`] = appointmentData;\n\n        firebase.database().ref('appointments').update(updates);\n      }\n    })\n  }\n\n  render() {\n    const { purpose, patient, date, location, time, notes, familyMember } = this.props.appointment;\n    const { showAppointmentInfo } = this.state;\n\n    return (\n      <div className=\"appointment-card\">\n        <div className=\"appointment-header\">\n          <span>\n            <i onClick={ this._handleShowClick } className=\"fas fa-sort-down\" style={{ cursor: 'pointer' }}/>\n            <h3>{ purpose }</h3>\n            <p>{ date }</p>\n          </span>\n\n          <i\n            className=\"fas fa-times\"\n            onClick={ this._handleDeleteClick }\n            style={{ cursor: 'pointer', color: '#F08080', marginLeft: '20px' }}/>\n        </div>\n\n        { showAppointmentInfo && (\n          <div className=\"appointment-info\">\n            <p><strong>For</strong>: { patient }</p>\n            <p><strong>Location</strong>: { location }</p>\n            <p><strong>Time</strong>: { time }</p>\n            <p><strong>Notes</strong>: { notes || '-' }</p>\n            <p><strong>Family Member</strong>: { familyMember }</p>\n\n            <span className=\"controls\">\n              { familyMember !== \"\" ? (\n                <button\n                  disabled\n                  className=\"nominate-button disabled\"\n                >\n                  <Emoji symbol=\"✋🏻\" label=\"hand\" />{`I can take ${ patient } to this one!`}\n                </button>\n              ) : (\n                <button\n                  className=\"nominate-button\"\n                  onClick={ this.nominateFamilyMember }\n                >\n                  <Emoji symbol=\"✋🏻\" label=\"hand\" />{`I can take ${ patient } to this one!`}\n                </button>\n              ) }\n\n              <Link className=\"edit-link\" to={`/appointments/${ this.props.appointmentKey }`}>\n                <i className=\"fas fa-pen\" />\n              </Link>\n            </span>\n          </div>\n        ) }\n      </div>\n    );\n  }\n}\n\nexport default Appointment;\n","import React, { Component } from 'react';\nimport Appointment from './Appointment';\nimport firebase from '../../Firebase';\n\nimport { Link } from 'react-router-dom';\n\nclass Appointments extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appointments: null,\n      searchTerm: '',\n    };\n\n    firebase.auth().onAuthStateChanged((user) => {\n      if (!user) {\n        this.props.history.push('/login');\n      }\n    })\n  };\n\n  _handleInput = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  componentDidMount() {\n    this.fetchAppointments();\n  }\n\n  fetchAppointments = () => {\n    let appointmentsData;\n\n    // Filter data\n    if (this.state.searchTerm === '') {\n      appointmentsData = firebase.database().ref('appointments').orderByChild('date');\n    } else {\n      appointmentsData = firebase.database().ref('appointments').orderByChild('patient').equalTo(this.state.searchTerm);\n    }\n\n    appointmentsData.on('value', (snapshot) => {\n      let snap = snapshot.val();\n      let appointmentsArray = Object.keys(snap).map((key) => {\n        snap[key].key = key;\n        return snap[key];\n      });\n\n      // Order by date\n      appointmentsArray.sort((a, b) => {\n        a = new Date(a.date);\n        b = new Date(b.date);\n        return a < b ? -1 : a > b ? 1 : 0;\n      });\n\n      // HACKS: todo: fix the index on Firebase to return results ordered by date\n      const appointmentsObject = {};\n      appointmentsArray.forEach((a) => {\n        appointmentsObject[a.key] = a;\n        delete a.key;\n      })\n\n      this.setState({\n        appointments: appointmentsObject// snapshot.val(),\n      });\n    });\n  }\n\n  deleteAppointment = (id) => {\n    firebase.database().ref('appointments').child(id).remove();\n    this.fetchAppointments();\n  };\n\n  nominateFamilyMember = (id, user) => {\n    const appointmentData = {\n      familyMember: user,\n    }\n\n    let updates = {}\n    updates[`/${ id }`] = appointmentData;\n\n    firebase.database().ref('appointments').update(updates);\n  }\n\n  filterAppointments = (e) => {\n    e.preventDefault();\n    this.fetchAppointments();\n  }\n\n  render() {\n    const { appointments } = this.state;\n\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"new-appointment\">\n            <Link to=\"/appointments/new\">\n              <i className=\"fas fa-plus\"></i>\n              <h3>New Appointment</h3>\n            </Link>\n          </div>\n          <h1>Upcoming Appointments</h1>\n          <form onSubmit={ this.filterAppointments } className=\"form search\">\n            <input\n              type=\"search\"\n              name=\"searchTerm\"\n              placeholder=\"Search by patient...\"\n              onChange={ this._handleInput }\n            />\n            <input type=\"submit\" value=\"Search\" />\n          </form>\n          { appointments ? ( Object.keys(appointments).map((key) => (\n            <Appointment\n              key={ key }\n              appointmentKey={ key }\n              appointment={ appointments[key] }\n              deleteAppointment={ this.deleteAppointment.bind(this, key) }\n            />\n          )) ) : (<p>No current appointments</p>)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Appointments;\n","import React, { Component } from 'react';\nimport firebase from '../../Firebase';\n\nclass AppointmentForm extends Component {\n  state = {\n    purpose: '',\n    patient: '',\n    date: '',\n    time: '',\n    location: '',\n    notes: '',\n    familyMember: '',\n    errors: [],\n    appointmentsRef: firebase.database().ref('appointments'),\n    currentUser: null,\n    editMode: false,\n  };\n\n  // Form validations\n  isFormValid = () => {\n    let errors = [];\n    let error;\n\n    if (this.isFormEmpty(this.state)) {\n      error = { message: 'Fill in the required fields' };\n      this.setState({\n        errors: errors.concat(error),\n      });\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  isFormEmpty = ({ purpose, patient, date, location }) => {\n    return (!purpose.length || !patient.length || !date.length || !location.length);\n  }\n\n  // Event listeners\n  _handleInput = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  _handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (this.isFormValid()) {\n      this.setState({\n        errors: [],\n      });\n\n      const appointmentData = {\n        purpose: this.state.purpose,\n        patient: this.state.patient,\n        date: this.state.date,\n        time: this.state.time,\n        location: this.state.location,\n        notes: this.state.notes,\n        familyMember: this.state.familyMember\n      };\n\n      if (this.state.editMode) {\n        this.editAppointment(appointmentData);\n      } else {\n        this.addNewAppointment(appointmentData);\n      }\n\n    }\n  }\n\n  addNewAppointment(appointmentData) {\n    const newAppointmentKey = this.state.appointmentsRef.push().key;\n\n    let updates = {};\n    updates[`/${newAppointmentKey}`] = appointmentData;\n\n    this.state.appointmentsRef.update(updates);\n    this.props.history.push('/appointments');\n  }\n\n  editAppointment(appointmentData) {\n    const appointmentKey = this.props.match.params.id;\n    let updates = {}\n    updates[`/${appointmentKey}`] = appointmentData;\n\n    this.state.appointmentsRef.update(updates);\n    this.props.history.push('/appointments');\n  }\n\n  fetchAppointment = (id) => {\n    const appointmentData = firebase.database().ref().child('appointments').child(id);\n\n    appointmentData.once('value', (snapshot) => {\n      this.setState({\n        date: snapshot.val().date,\n        time: snapshot.val().time,\n        familyMember: snapshot.val().familyMember,\n        location: snapshot.val().location,\n        notes: snapshot.val().notes,\n        patient: snapshot.val().patient,\n        purpose: snapshot.val().purpose,\n      });\n    });\n  }\n\n  componentWillMount() {\n    if (this.props.match.params.id) {\n      this.setState({ editMode: true })\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.editMode) {\n      this.fetchAppointment(this.props.match.params.id);\n    };\n    this.fetchCurrentUser();\n  }\n\n  fetchCurrentUser() {\n    firebase.auth().onAuthStateChanged((user) => {\n      this.setState({\n        currentUser: user.displayName,\n      });\n    });\n  }\n\n  render() {\n    const { purpose, patient, date, time, location, notes, familyMember, currentUser } = this.state;\n\n    return (\n      <div>\n        <div className=\"container form\">\n          { this.state.editMode ? (\n            <h2>Edit Appointment:</h2>\n          ) : (\n            <h2>New Appointment:</h2>\n          ) }\n          <form onSubmit={ this._handleSubmit }>\n              <label htmlFor=\"patient\">For</label>\n              <input\n                type=\"text\"\n                name=\"patient\"\n                value={ patient }\n                placeholder=\"Aileen\"\n                required\n                onChange={this._handleInput}\n              />\n\n              <label htmlFor=\"name\">Purpose</label>\n              <input\n                type=\"text\"\n                name=\"purpose\"\n                value={ purpose }\n                placeholder=\"Doctor's Appointment\"\n                required\n                onChange={ this._handleInput }\n              />\n\n              <label htmlFor=\"date\">Date</label>\n              <input\n                type=\"date\"\n                name=\"date\"\n                value={ date }\n                onChange={ this._handleInput }\n                required\n              />\n\n              <label htmlFor=\"time\">Time</label>\n              <input\n                type=\"time\"\n                name=\"time\"\n                value={ time }\n                onChange={ this._handleInput }\n                required\n              />\n\n              <label htmlFor=\"location\">Location</label>\n              <input\n                type=\"text\"\n                name=\"location\"\n                value={ location }\n                placeholder=\"Brisbane\"\n                onChange={ this._handleInput }\n                required\n              />\n\n              <label htmlFor=\"notes\">Notes</label>\n              <textarea\n                name=\"notes\"\n                value={ notes }\n                placeholder=\"Bring scans\"\n                onChange={ this._handleInput }\n              />\n\n              { this.state.familyMember && this.state.editMode ? (\n                <div>\n                  <p>{ `${ familyMember === currentUser ? 'You are' : `${ familyMember } is` } taking ${ patient || 'them' } to this appointment`}</p>\n                </div>\n              ) : null }\n\n              <span style={ this.state.editMode && this.state.familyMember ? { display: 'none' } : { display: \"block\" } }>\n              <label style={{ display: 'block' }} htmlFor=\"familyMember\">{`I can take ${ patient || 'them' } to this appointment`}</label>\n              <input\n                type=\"radio\"\n                name=\"familyMember\"\n                value={ currentUser || \"\" }\n                onChange={ this._handleInput }\n              />Yes\n              <input\n                type=\"radio\"\n                name=\"familyMember\"\n                value=\"\"\n                onChange={ this._handleInput }\n              />No\n              </span>\n            <input type=\"submit\" value={ this.state.editMode ? \"Edit Appointment\" : \"Add Appointment\" } />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AppointmentForm;\n","import React, { Component } from 'react';\nimport firebase from '../../Firebase';\n\nclass Messages extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null,\n    }\n\n    this.fetchCurrentUser();\n  }\n\n  fetchCurrentUser() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({\n          currentUser: user.displayName,\n        });\n      }\n    });\n  }\n\n  render() {\n    const messages = this.props.messages;\n\n    return (\n      <div className=\"messages\">\n        { Object.keys(messages).map((key) => (\n          <div className={ this.state.currentUser === messages[key].sender ? \"message user-message\" : \"message\" }>\n            <p className=\"sender-text\">{ messages[key].sender }</p>\n            <p key={ key }>{ messages[key].message }</p>\n          </div> )\n        ) }\n      </div>\n    );\n  }\n}\n\nexport default Messages;\n","import React, { Component } from 'react';\n\nclass MessageForm extends Component {\n  state = {\n    message: '',\n  }\n\n  _handleInput = (e) => {\n    this.setState({\n      message: e.target.value\n    });\n  }\n\n  _handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.sendMessage(this.state.message);\n\n    this.setState({\n      message: '',\n    });\n  }\n\n  render() {\n    return (\n      <form onSubmit={ this._handleSubmit } className=\" message-form\">\n        <input\n          type=\"text\"\n          onChange={ this._handleInput }\n          placeholder=\"Send a message...\"\n          value={ this.state.message }\n        />\n        <input type=\"submit\" value=\"Send\" />\n      </form>\n    );\n  }\n}\n\nexport default MessageForm;\n","import React, { Component } from 'react';\nimport Messages from './Messages';\nimport MessageForm from './MessageForm';\nimport firebase from '../../Firebase';\n\nclass Chatroom extends Component {\n  state = {\n    messages: [],\n    user: null,\n  }\n\n  checkForUser() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user: user.displayName })\n      } else {\n        this.setState({ user: null })\n        this.props.history.push('/login');\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.fetchMessages();\n    this.checkForUser();\n  }\n\n  fetchMessages = () => {\n    let loadNumber = 20\n    // TO DO = LOAD EARLIER MESSAGES FUNCTION\n\n    const messagesData = firebase.database().ref().child('messages').limitToLast(loadNumber);\n    messagesData.on('value', (snapshot) => {\n      this.setState({\n        messages: snapshot.val(),\n      });\n    });\n  }\n\n  sendMessage = (text) => {\n    const messagesData = firebase.database().ref().child('messages');\n    messagesData.push({\n      message: text,\n      sender: this.state.user\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Chatroom</h1>\n        <div className=\"chatroom\">\n          <Messages messages={ this.state.messages } />\n          <MessageForm sendMessage={ this.sendMessage }/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Chatroom;\n","import React from 'react';\nimport Nav from '../layout/Nav';\n\nexport default () => {\n  return (\n    <div>\n      <Nav />\n      <div className=\"container\">\n        <h1>404 Page Not Found</h1>\n        <p>Sorry! That pages does not exist</p>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\n\n// Make this a functional component\nclass Footer extends Component {\n  render() {\n    return (\n      <footer>\n        <p>Created by Bridget McMahon 2019</p>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport firebase from '../Firebase';\n\nimport Nav from './layout/Nav';\nimport Home from './Home';\nimport Login from './auth/Login';\nimport Register from './auth/Register';\nimport Appointments from './appointments/Appointments';\nimport AppointmentForm from './appointments/AppointmentForm';\nimport Chatroom from './chatroom/Chatroom';\nimport NotFound from './pages/NotFound';\nimport Footer from './layout/Footer';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userLoggedIn: false,\n    }\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({\n          userLoggedIn: true,\n        });\n\n        // this.props.history.push('/')\n      }\n    });\n  }\n\n  logout = () => {\n    firebase.auth().signOut().then((user) => {\n      this.setState({ userLoggedIn: false })\n    })\n\n    this.props.history.push('/');\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Nav userLoggedIn={ this.state.userLoggedIn } logout={ this.logout } />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={ Home } />\n              <Route exact path=\"/login\" component={ Login } />\n              <Route exact path=\"/register\" component={ Register } />\n              <Route exact path=\"/appointments\" component={ Appointments } />\n              <Route exact path=\"/appointments/new\" component={ AppointmentForm } />\n              <Route path=\"/appointments/:id\" component={ AppointmentForm } />\n              <Route exact path=\"/chatroom\" component={ Chatroom } />\n              <Route component={ NotFound } />\n            </Switch>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}